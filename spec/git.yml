#git:
#  gitRepoExists
#  gitInit:
#    type: 
#  gitCreateRepo
#  gitAdd
#  gitCommit
##################
#  Options
##################

#------- test types ---------
#
#  should be / expect to be
#
#  a <type>
#  equal <value>
#  have_length_of <integer>
#  have_property <string>
#  instance_of <>
#

path_prefix: "lib"
api_name: git

api:

    # -------------- #
    # Initialization #
    # -------------- #
    
    gitRepoExists:
      name: gitRepoExists
      description: Check if git repository exists
      func_name: exec
      params_user:
      params_internal: 
      - name: command
        type: string
        default: git rev-parse --is-inside-work-tree 
      tests:
      - parameters: 
          command: git rev-parse --is-inside-work-tree
        condition: Should not fail

    gitInit:
      name: gitInit
      description: Initialize a git repository
      func_name: exec
      params_user:
      params_internal: 
      - name: command
        type: string
        default: git init
      tests:
      - parameters: { command: "git init" }
        condition: Should not fail

    initGitIgnore:
      name: initGitIgnore
      description: Initialize a .gitignore file
      func_name: exec
      params_user:
      params_internal: 
      - name: command
        type: string
        default: echo "node_modules" >> .gitignore
      tests:
      - parameters: { command: "echo 'node_modules' >> .gitignore" }
        condition: Should not fail

    gitAdd:
      name: gitAdd
      description: Add files to git repo
      func_name: exec
      params_user:
      params_internal: 
      - name: command
        type: string
        default: git add .
      tests:
      - parameters: { command: "git add ." }
        condition: Should not fail

    gitCommit: 
      name: gitCommit
      description: Commit changes to a git repository
      func_name: exec
      params_user:
      - name: message
        description: A commit message
        type: string
        default: null
      params_internal: 
      - name: command
        type: string
        default: git commit -m "${message}"
      tests:
      - parameters: { command: "git commit -m message" }
        condition: Should not fail


    # ------------ #
    # Distribution #
    # ------------ #

    createGithubRepo:
      name: createGithubRepo 
      description: Remotely create a Github repository
      func_name: exec
      params_user:
      - name: user
        description: Github username
        type: string
        default: null
      - name: name
        description: The name of the github repo you wish to create
        type: string
        default: null
      - name: token
        description: Github token for accessing API
        type: string
        default: null
      params_internal:
      - name: command
        description: Currently requires curl to work
        type: string
        default: curl -u '${user}:${token}' https://api.github.com/user/repos -d '{"name":"${repo_name}"}'
      tests:
      - params_user:
          user: 'some_random_username'
          repo: 'some_repo_name'
        condition: Should not fail
#
#    remoteAddOrigin: 
#       name: remoteAddOrigin
#      description: "Adds a remote repository"
#      function: exec
#      parameter_desc: '{object} [{ command="git remote add origin git@github.com:%(github_username)s/%(repo_name)s.git" }]'
#      function: 
#      tests:
#      - parameters: { command: "git remote add origin git@github.com:%(github_username)s/%(repo_name)s.git" }
#        condition: 'should not fail'
#
    gitPush: 
      name: gitPush
      description: "Pushes to repository"
      func_name: exec
      params_user:
      params_internal:
      - name: command
        description:
        type: string
        default: git push -u origin master
      tests:
      - parameters: { command: "./spec/api.yml" }
        condition: 'should not fail'
#
#        #    createGitlabRepo:
#               name: createGitlabRepo
#        #      description: "Remotely create a Github repository"
#        #      function: exec
#        #        #      parameter_desc: '{object} [{ command="" }]'
#        #        #      tests:
#        #      - parameters: { command: "curl -H 'Content-Type:application/json' https://gitlab.com/api/v3/projects?private_token=<token> -d '{ \"name\": \"<new repo name>\" }'"
#        #        condition: 'should not fail'
#
